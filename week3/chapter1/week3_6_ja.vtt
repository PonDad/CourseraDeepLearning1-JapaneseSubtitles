WEBVTT

1
00:00:00.390 --> 00:00:04.350
あなたは、ニューラルネットワークを後押しするとき1の

2
00:00:02.580 --> 00:00:06.720
あなたが作るために得る選択肢は何ですか

3
00:00:04.350 --> 00:00:09.599
アクティベーション機能は、独立して使用します

4
00:00:06.720 --> 00:00:11.490
の出力部での層ならびに

5
00:00:09.599 --> 00:00:13.139
あなたのニューラルネットワークは、これまでのところ、我々はちょうどました

6
00:00:11.490 --> 00:00:16.080
シグモイドの活性化を使用してい

7
00:00:13.139 --> 00:00:18.720
機能時には他の選択肢ことができます

8
00:00:16.080 --> 00:00:20.939
より良い仕事のは、見てみましょう

9
00:00:18.720 --> 00:00:23.279
前方にあるオプションの一部

10
00:00:20.939 --> 00:00:26.099
ニューラルネットワークの伝播手順

11
00:00:23.279 --> 00:00:28.710
我々は、我々が使用するこれらの2つのステップを持っています

12
00:00:26.099 --> 00:00:32.610
ここではシグモイド関数シグモイドがあるように、

13
00:00:28.710 --> 00:00:37.590
活性化関数と呼ばれ、Gであります

14
00:00:32.610 --> 00:00:40.680
私は1に等しいおなじみのシグモイド関数

15
00:00:37.590 --> 00:00:42.600
1を超えるプラスにそう負GにNU

16
00:00:40.680 --> 00:00:49.739
私たちが持つことができ、より一般的なケース

17
00:00:42.600 --> 00:00:53.309
視覚右Zの異なる関数G

18
00:00:49.739 --> 00:00:56.010
ここでGは、非線形ところかもしれません

19
00:00:53.309 --> 00:00:59.250
シグモイドではないかもしれない機能

20
00:00:56.010 --> 00:01:01.879
例えばその機能シグモイド

21
00:00:59.250 --> 00:01:04.290
この関数は0＆1の間に行きます

22
00:01:01.879 --> 00:01:06.900
ほとんど常に活性化関数

23
00:01:04.290 --> 00:01:10.320
シグモイド関数よりも良い作品

24
00:01:06.900 --> 00:01:14.189
10H関数または双曲線であります

25
00:01:10.320 --> 00:01:19.979
正接関数は、これはこれがZであります

26
00:01:14.189 --> 00:01:25.710
これはZの10 Hに等しく、これは行くです

27
00:01:19.979 --> 00:01:31.079
式の間でプラス1とマイナス1

28
00:01:25.710 --> 00:01:37.799
10H機能のためのZマイナスに電子であります

29
00:01:31.079 --> 00:01:40.140
あそこ負のVに電子一部と、それはです

30
00:01:37.799 --> 00:01:43.890
実際には、数学的にシフト

31
00:01:40.140 --> 00:01:46.350
ようにシグモイド関数のバージョン

32
00:01:43.890 --> 00:01:49.860
あなたはちょうどそのようシグモイド関数を知っています

33
00:01:46.350 --> 00:01:52.079
それが今で横切るようにそれをシフト

34
00:01:49.860 --> 00:01:54.570
ゼロゼロ点と、それが行くように再スケール

35
00:01:52.079 --> 00:01:58.530
Gへのマイナス1プラス1とそれが変わります

36
00:01:54.570 --> 00:02:05.340
隠れユニットのためにそのうち、あなたが許可すれば

37
00:01:58.530 --> 00:02:09.910
Zの関数gに等しくなります

38
00:02:05.340 --> 00:02:12.490
10 HSVこれはほとんど常に良い作品

39
00:02:09.910 --> 00:02:14.020
との理由シグモイド関数より

40
00:02:12.490 --> 00:02:16.930
プラス1とマイナス1の間の値

41
00:02:14.020 --> 00:02:19.000
来るアクティベーションの平均

42
00:02:16.930 --> 00:02:21.550
そこにあなたの頭の外に近いです

43
00:02:19.000 --> 00:02:23.020
ゼロ平均を持つので、同じように

44
00:02:21.550 --> 00:02:23.590
時にはあなたは、学習を訓練するとき

45
00:02:23.020 --> 00:02:25.690
アルゴリズム

46
00:02:23.590 --> 00:02:29.709
あなたは、データを中央にして、あなたが持っているかもしれません

47
00:02:25.690 --> 00:02:31.510
データは、代わりに10-8を使用してゼロ平均を持っています

48
00:02:29.709 --> 00:02:34.750
シグモイド関数の種類があります

49
00:02:31.510 --> 00:02:36.880
ようにあなたのデータを中心とする効果

50
00:02:34.750 --> 00:02:39.610
データの平均値は、3km以内に

51
00:02:36.880 --> 00:02:41.410
ゼロではなく、多分0.5と、この

52
00:02:39.610 --> 00:02:43.510
実際には、次の学習になり

53
00:02:41.410 --> 00:02:45.820
より多くの私たちが言うよ少し簡単にレイヤー

54
00:02:43.510 --> 00:02:47.380
これについては第二のコースでときに我々

55
00:02:45.820 --> 00:02:50.739
などの最適化アルゴリズムについて話します

56
00:02:47.380 --> 00:02:52.480
うまくしかし、1軒のお持ち帰りは、私はかなりということです

57
00:02:50.739 --> 00:02:54.250
多くのシグモイドの活性化を使用することはありません

58
00:02:52.480 --> 00:02:56.410
もはや機能

59
00:02:54.250 --> 00:02:59.560
10っぽい機能はほとんど常にあります

60
00:02:56.410 --> 00:03:03.550
厳密に一つの例外が優れています

61
00:02:59.560 --> 00:03:07.420
出力層のためのYがある場合理由

62
00:03:03.550 --> 00:03:10.570
0または1のいずれかが、それはYのために理にかなっています

63
00:03:07.420 --> 00:03:13.989
あなたがしたい数であるように、帽子

64
00:03:10.570 --> 00:03:16.570
出力プラス0と1の間ではなく、

65
00:03:13.989 --> 00:03:19.360
マイナス1と1の間でとても1

66
00:03:16.570 --> 00:03:21.430
私はシグモイドを使用する例外

67
00:03:19.360 --> 00:03:24.670
あなたが使用している時にアクティベーション機能があります

68
00:03:21.430 --> 00:03:26.350
場合、あなたの内のバイナリ分類

69
00:03:24.670 --> 00:03:29.709
シグモイドの活性化を使用する場合があります

70
00:03:26.350 --> 00:03:35.170
出力層ZのようにGのための関数

71
00:03:29.709 --> 00:03:37.180
ここで図2は、Z 2等のシグマに等しいです。

72
00:03:35.170 --> 00:03:40.299
あなたがこの例では見ることはどこです

73
00:03:37.180 --> 00:03:43.920
あなたは10インチの活性化を持っているかもしれません

74
00:03:40.299 --> 00:03:47.769
隠れ層のための機能と、

75
00:03:43.920 --> 00:03:49.299
その出力層のためのシグモイド

76
00:03:47.769 --> 00:03:51.670
活性化関数は、異なっていてもよいです

77
00:03:49.299 --> 00:03:53.709
異なる層のために、時にはへ

78
00:03:51.670 --> 00:03:55.690
活性化関数であることを示します

79
00:03:53.709 --> 00:03:58.510
我々は可能性があります異なる層ごとに異なります

80
00:03:55.690 --> 00:04:02.230
これらの角括弧のスーパースクリプトを使用します

81
00:03:58.510 --> 00:04:04.540
同様に正方形のGを示すために

82
00:04:02.230 --> 00:04:06.940
ブラケット1は、G正方形と異なっていてもよいです

83
00:04:04.540 --> 00:04:09.340
ブラケット2赤色マケイン角ブラケット1

84
00:04:06.940 --> 00:04:11.470
上付き文字は、この層を意味し、

85
00:04:09.340 --> 00:04:12.879
上付き四角ブラケット2を指し

86
00:04:11.470 --> 00:04:15.680
アルファ層

87
00:04:12.879 --> 00:04:18.109
今、両方の欠点の1

88
00:04:15.680 --> 00:04:20.780
シグモイド関数と10Hの機能があります

89
00:04:18.109 --> 00:04:22.910
Zが非常に大きいまたは非常にいずれかである場合に

90
00:04:20.780 --> 00:04:24.460
の勾配その後、小さな

91
00:04:22.910 --> 00:04:27.560
誘導体またはこの関数の傾き

92
00:04:24.460 --> 00:04:30.139
そのZが非常に大きいまたは非常に小さくなる

93
00:04:27.560 --> 00:04:33.169
Zは傾きが非常に小さいです

94
00:04:30.139 --> 00:04:35.270
あなたが知っている機能は、近くになってしまいます

95
00:04:33.169 --> 00:04:38.360
ゼロとこれは勾配を遅くすることができます

96
00:04:35.270 --> 00:04:41.810
降下非常にあるおもちゃのように1

97
00:04:38.360 --> 00:04:44.900
機械学習で人気は何であります

98
00:04:41.810 --> 00:04:50.720
整流リニアユニット、いわゆる

99
00:04:44.900 --> 00:04:57.110
値関数は、このようになりますし、

100
00:04:50.720 --> 00:05:00.500
式ので0コンマZの最大値に等しくなります

101
00:04:57.110 --> 00:05:03.530
誘導体は限りZであるように1

102
00:05:00.500 --> 00:05:05.990
正および誘導体または傾きであります

103
00:05:03.530 --> 00:05:07.580
0あなたはならZが負

104
00:05:05.990 --> 00:05:10.190
実装この技術的に

105
00:05:07.580 --> 00:05:12.349
派生Zは正確に0ではありませんされている場合

106
00:05:10.190 --> 00:05:14.210
明確に定義されていますが実装したときであります

107
00:05:12.349 --> 00:05:18.770
コンピュータで、多くの場合、あなたが得ます

108
00:05:14.210 --> 00:05:21.229
まさに0 0 0 0 0 0 0 0 0 0に等しいです。

109
00:05:18.770 --> 00:05:22.940
あなたがする必要はありませんので、それは非常に小さいです

110
00:05:21.229 --> 00:05:25.610
あなたはできる、実際にそれを心配

111
00:05:22.940 --> 00:05:29.659
Zが等しいとき誘導体をふり

112
00:05:25.610 --> 00:05:32.270
0あなたはふりをすることができ、1または0のいずれかで、

113
00:05:29.659 --> 00:05:35.479
あなたは、実際にそのよううまく動作することができます

114
00:05:32.270 --> 00:05:37.430
その事実を微分されていません

115
00:05:35.479 --> 00:05:40.010
ここのための親指のいくつかのルールがあります

116
00:05:37.430 --> 00:05:43.280
あなたの場合は活性化関数を選択します

117
00:05:40.010 --> 00:05:45.620
あなたは私が使用しているなら出力は0〜1の値です

118
00:05:43.280 --> 00:05:47.539
シグモイドバイナリ分類

119
00:05:45.620 --> 00:05:50.479
活性化機能は、のために非常に自然です

120
00:05:47.539 --> 00:05:59.419
他のすべてのための上層と、その後

121
00:05:50.479 --> 00:06:04.460
varaluまたは整流線形上の単位

122
00:05:59.419 --> 00:06:07.190
ユニットはますますデフォルトの選択であります

123
00:06:04.460 --> 00:06:10.280
活性化関数のあなたがいない場合ので、

124
00:06:07.190 --> 00:06:13.849
そこにあなたの頭のために何を使用してください

125
00:06:10.280 --> 00:06:15.289
私はちょうどreluの活性化を使用します

126
00:06:13.849 --> 00:06:17.570
あなたはほとんどの人が見るものだ機能

127
00:06:15.289 --> 00:06:20.120
時々ものの、これらの日使用

128
00:06:17.570 --> 00:06:21.350
人々はまた、黄褐色の活性化を使用します

129
00:06:20.120 --> 00:06:23.150
関数

130
00:06:21.350 --> 00:06:26.270
値のこの利点は、ということになると

131
00:06:23.150 --> 00:06:28.640
誘導体はゼロときVに等しいです

132
00:06:26.270 --> 00:06:31.700
これだけで動作し、実際に否定的です

133
00:06:28.640 --> 00:06:33.890
罰金が、別のバージョンがあります

134
00:06:31.700 --> 00:06:35.420
少なくともG値と呼ばれる値が得られます

135
00:06:33.890 --> 00:06:38.690
あなたの次のスライド上の式が、

136
00:06:35.420 --> 00:06:40.520
代わりにGである場合、それはゼロであるの

137
00:06:38.690 --> 00:06:42.940
負それだけでわずかな傾きをとります

138
00:06:40.520 --> 00:06:47.900
以下のようなので、これはウイスキーと呼ばれています

139
00:06:42.940 --> 00:06:51.170
値これは、通常よりも良い作品

140
00:06:47.900 --> 00:06:53.900
値の活性化機能はありますが、

141
00:06:51.170 --> 00:06:54.860
ただどちらか実際に限り使用されていません

142
00:06:53.900 --> 00:06:56.770
一つは問題ないはずです

143
00:06:54.860 --> 00:06:59.330
ただし、あなたは1つのIを選択しなければならない場合

144
00:06:56.770 --> 00:07:01.460
通常は、収益を使用し、

145
00:06:59.330 --> 00:07:04.460
値とキーのみの両方の利点

146
00:07:01.460 --> 00:07:06.500
値はの多くのスペースのためということです

147
00:07:04.460 --> 00:07:08.150
Z活性化誘導体

148
00:07:06.500 --> 00:07:11.870
活性化の傾斜機能

149
00:07:08.150 --> 00:07:13.970
関数はゼロとは非常に異なっています

150
00:07:11.870 --> 00:07:15.920
そう、実際に定期的に使用して

151
00:07:13.970 --> 00:07:18.590
活性化機能新しいネットワーク

152
00:07:15.920 --> 00:07:20.810
頻繁に使用するよりもはるかに高速を学びます

153
00:07:18.590 --> 00:07:23.840
10歳またはシグモイド活性化

154
00:07:20.810 --> 00:07:26.420
機能と主な理由は、その上で

155
00:07:23.840 --> 00:07:28.700
この斜面のこの効果の少ないです

156
00:07:26.420 --> 00:07:31.580
減速ゼロになる機能

157
00:07:28.700 --> 00:07:33.950
ダウン半分のために学び、私が知っています

158
00:07:31.580 --> 00:07:36.710
reluの傾きであるZの範囲の

159
00:07:33.950 --> 00:07:39.050
ゼロが、あなたの練習は十分で

160
00:07:36.710 --> 00:07:41.120
隠れユニットは、よりZも大きくなります

161
00:07:39.050 --> 00:07:43.700
ゼロはそうまだかなりマスクすることができ学習します

162
00:07:41.120 --> 00:07:45.800
ほとんどの訓練例のためにこれだけしてみましょう

163
00:07:43.700 --> 00:07:47.600
の長所と短所がありますすぐにおさらい

164
00:07:45.800 --> 00:07:50.030
ここの異なる活性化関数

165
00:07:47.600 --> 00:07:52.790
私は希望シグモイド活性化関数

166
00:07:50.030 --> 00:07:54.410
出力以外にこれを使用することはありませんと言います

167
00:07:52.790 --> 00:07:56.330
あなたがバイナリを行っている場合層

168
00:07:54.410 --> 00:07:59.540
分類または多分使うことはほとんどありません

169
00:07:56.330 --> 00:08:02.720
これと私はほとんど決して使用しない理由

170
00:07:59.540 --> 00:08:05.060
10Hはかなりあるためです

171
00:08:02.720 --> 00:08:12.080
厳密に優れたので、10インチ

172
00:08:05.060 --> 00:08:13.430
活性化関数はこれです、その後、

173
00:08:12.080 --> 00:08:15.490
最も一般的に使用されるデフォルト

174
00:08:13.430 --> 00:08:19.100
活性化関数は、グランドビューです

175
00:08:15.490 --> 00:08:23.660
あなたがわからないので、このされています

176
00:08:19.100 --> 00:08:26.600
他に、あなたは多分、このいずれかを使用し、使用します

177
00:08:23.660 --> 00:08:31.930
あなたのネギしようとするも、お気軽に知っています

178
00:08:26.600 --> 00:08:36.659
UMがあるかもしれないどこ本当に知っています

179
00:08:31.930 --> 00:08:40.390
0.01 GコーメンZは、右程度の最大値であります

180
00:08:36.659 --> 00:08:43.810
0.01倍ZおよびZそれはあなたを与えるので、

181
00:08:40.390 --> 00:08:46.200
このいくつかの機能でベンドし

182
00:08:43.810 --> 00:08:51.670
定数ということですなぜあなたは知っていると言うかもしれません

183
00:08:46.200 --> 00:08:53.380
0.01はよくあなたはまた別のことを行うことができます

184
00:08:51.670 --> 00:08:54.670
学習アルゴリズムのパラメータと、

185
00:08:53.380 --> 00:08:58.480
一部の人はそれがさらに良い作品と言います

186
00:08:54.670 --> 00:08:59.649
しかし、私はほとんどの人がそうしかしそれを行う見ません

187
00:08:58.480 --> 00:09:01.360
あなたはそれをしようとするように感じる場合は、あなたの

188
00:08:59.649 --> 00:09:03.430
あなたはお気軽にしてください知っているアプリケーション

189
00:09:01.360 --> 00:09:05.800
そうすると、あなたはどれだけそれ見ることができます

190
00:09:03.430 --> 00:09:08.290
作品やどのくらいの作品やにこだわります

191
00:09:05.800 --> 00:09:09.880
それそれはあなたに良い結果を与える場合ので、私は願っています

192
00:09:08.290 --> 00:09:11.620
それはあなたのいくつかの感覚を与えます

193
00:09:09.880 --> 00:09:13.870
あなたができる活性化関数の選択

194
00:09:11.620 --> 00:09:15.940
ネットワーク内で使用テーマの一つ

195
00:09:13.870 --> 00:09:18.130
我々は深い学習に表示されますあなたのことです

196
00:09:15.940 --> 00:09:20.110
多くの場合にはさまざまな選択肢がたくさんあります

197
00:09:18.130 --> 00:09:22.089
あなたのニューラルネットワークがどのようにレンジングコード

198
00:09:20.110 --> 00:09:24.430
クレジット・ユニットの数からへ

199
00:09:22.089 --> 00:09:25.839
どのように活性化機能を選択

200
00:09:24.430 --> 00:09:28.480
我々が表示されます波を中和します

201
00:09:25.839 --> 00:09:30.880
後でそのような選択肢が多く、それ

202
00:09:28.480 --> 00:09:33.279
結局のところそれはすることが困難な場合があります

203
00:09:30.880 --> 00:09:35.649
正確に何のために良い指針を得ます

204
00:09:33.279 --> 00:09:37.270
そのので、あなたの問題のために最適に動作します

205
00:09:35.649 --> 00:09:39.070
私は与え続けるだろうこれらの3つの原因

206
00:09:37.270 --> 00:09:40.839
もし私が見るものの感覚

207
00:09:39.070 --> 00:09:43.450
多かれ少なかれ何の面で業界

208
00:09:40.839 --> 00:09:45.520
人気が、使用してアプリケーションのための

209
00:09:43.450 --> 00:09:46.930
アプリケーション映像合成、それはです

210
00:09:45.520 --> 00:09:49.450
に知ることは実際には非常に困難

211
00:09:46.930 --> 00:09:51.400
進歩はまさにそう最適に動作します

212
00:09:49.450 --> 00:09:52.930
あなたがいないのであれば、具体的な値は次のようになります

213
00:09:51.400 --> 00:09:54.940
これらの活性化の確認どの1

214
00:09:52.930 --> 00:09:57.700
関数は、あなたがそれらを試してみてください知っている最高の仕事します

215
00:09:54.940 --> 00:10:00.010
すべてその後、ホールドアウトのように評価します

216
00:09:57.700 --> 00:10:02.529
検証セットや開発セットのような

217
00:10:00.010 --> 00:10:04.480
これは後ほど話と表示されます

218
00:10:02.529 --> 00:10:08.350
どちらが良い作品と、その後の行きます

219
00:10:04.480 --> 00:10:10.180
それは、私がすることで、これらをテストすることを考えます

220
00:10:08.350 --> 00:10:13.510
あなたのアプリケーションのためのさまざまな選択肢

221
00:10:10.180 --> 00:10:16.240
あなたの校正の将来の方が良いと思います

222
00:10:13.510 --> 00:10:18.130
ニューラルネットワークアーキテクチャ

223
00:10:16.240 --> 00:10:20.550
違いは、同様に私たちの問題を見ています

224
00:10:18.130 --> 00:10:23.440
アルゴリズムの進化ではなく、

225
00:10:20.550 --> 00:10:25.630
私はいつもあなたを教えていた場合、あなたは知っています

226
00:10:23.440 --> 00:10:27.339
ランダム活性化を使用し、使用しないでください

227
00:10:25.630 --> 00:10:29.440
何かそれがちょうどよく、またはかもしれないこと

228
00:10:27.339 --> 00:10:30.790
あなたは終わるどんな問題には適用されませ

229
00:10:29.440 --> 00:10:32.410
あなたはどちらか知っている上に取り組んで

230
00:10:30.790 --> 00:10:36.220
どちらか遠くに近い将来に

231
00:10:32.410 --> 00:10:37.870
将来のすべての権利ので、それはの選択でした

232
00:10:36.220 --> 00:10:39.310
あなたが見てきた活性化関数

233
00:10:37.870 --> 00:10:41.459
最も人気のある活性化関数

234
00:10:39.310 --> 00:10:44.260
その1つの他の質問があります

235
00:10:41.459 --> 00:10:45.160
時にはあなたが理由である尋ねるれます

236
00:10:44.260 --> 00:10:46.959
でも、あなたに必要

237
00:10:45.160 --> 00:10:49.240
活性化関数では、すべての理由だけではなく、

238
00:10:46.959 --> 00:10:49.779
それを廃止それではについてお話しましょう

239
00:10:49.240 --> 00:10:52.240
それ

240
00:10:49.779 --> 00:10:54.430
次のビデオでは、あなたが見たときに、なぜ

241
00:10:52.240 --> 00:10:58.259
新しいネットワークは、いくつかの並べ替えを意味します

242
00:10:54.430 --> 00:10:58.259
非線形活性化関数
